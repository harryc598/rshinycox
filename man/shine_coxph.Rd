% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shine_coxph.R
\name{shine_coxph}
\alias{shine_coxph}
\title{Makes a shiny app for predictions from Cox model(s)}
\usage{
shine_coxph(..., app.dir = NULL, theme = c("default", "dashboard"))
}
\arguments{
\item{...}{Any number of Cox proportional hazard models, created by
\code{\link[survival:coxph]{survival::coxph()}} or this wrapper function, which is more strict in
order to ensure the models are appropriate for \code{shine_coxph()}}

\item{app.dir}{Directory where shiny app is created. Specifically, a folder
will be made containing the \code{app.R} file as well as the \code{.Rdata} file. If
no directory is provided, the folder will be created in the working
directory, with the user having the opportunity to confirm this or stop the
function and provide a directory.}

\item{theme}{Theme of shiny app.
\itemize{
\item \verb{"default}: default theme, requires only shiny
\item \code{"dashboard"}: requires \code{"shinydashboard"} and \code{"DT"} packages
}}
}
\value{
A list containing Cox model information along with the shiny app
code. The app is written to the directory while the function is operating.
}
\description{
Writes a shiny app to visualize predicted survival curves from one or
multiple Cox models. One of the important features of this function is that
the shiny app, once created, will not contain any identifiable data,
containing only information necessary for predictions.
}
\section{Notes}{


There are some requirements in order for this function to run without
error: in your original \code{\link[survival:coxph]{survival::coxph()}} function or functions,
\code{model = TRUE} and \code{x = TRUE} are required arguments. Because of this
requirement the use of \code{tt()} is not allowed in our function. As well as
that, strata by covariate interaction terms are not allowed. Currently,
this function does not support penalized models or multi-state models.
In addition a warning is in order, in that you should not use
\code{\link[survival:finegray]{survival::finegray()}} when creating Cox models for this function, although
doing so will not result in an error.
}

\section{Guidelines}{


In regards to formula notation, the variable names used are ultimately what
will be displayed in the application. Using functions in the formula will
work, but with multiple nested functions it will fail. As well, using "."
notation will not work at the moment. The \code{na.action} is inherited from the
Cox models, with \code{omit} being the only option with support at this time.
}

\examples{
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}

  library(survival)
  # Get temporary directory for shiny app
  temp_app_dir <- tempdir()
  # Data used is from survival package, renamed for legibility
  names(leukemia)[names(leukemia) == "x"] <- "treatment"
  # Make Cox model, with x = TRUE and model = TRUE
  model1 <- coxph(Surv(time, status) ~ treatment,
  leukemia, x = TRUE, model = TRUE)

  # Use shine_coxph() to create shiny app in temporary directory
  shine_coxph("Model 1" = model1, app.dir =
  temp_app_dir)

  # Get directory for shiny app (should be first, check file list if not)
  filedir <- list.files(temp_app_dir)[1]

  # Run shiny app from temporary directory
  shiny::runApp(paste0(temp_app_dir, "/", filedir))
  # Remove app from directory once finished
  unlink(paste0(temp_app_dir,"/",filedir), recursive = TRUE)

\dontshow{\}) # examplesIf}
}
